{
    "TS res.write()": {
        "prefix": "rw",
        "description": "res.write()",
        "scope": "typescript",
        "body": ["res.write(`\\${}\\n`);"]
    },
    "TS map def": {
        "prefix": "mapDef",
        "description": "Map def",
        "scope": "typescript",
        "body": ["const stat: Map<string, number> = new Map<string, number>();"]
    },
    "TS map use": {
        "prefix": "mapUse",
        "description": "Map use",
        "scope": "typescript",
        "body": ["if (stat.has(i.key)) {",
                "\tconst actualValue = stat.get(i.key) as number;",
                "\tstat.set(i.key, actualValue + i.increment);",
                "} else {",
                "\tstat.set(i.key, i.initValue);",
                "}"]
    },
    "TS read txt file": {
        "prefix": "readFileSync",
        "description": "Read txt file",
        "scope": "typescript",
        "body": ["fs.readFileSync(\"forrÃ¡s.txt\")",
                "\t.toString()",
                "\t.split(\"\\n\")",
                "\t.forEach(sor => {",
                "\t\tconst aktSor: string = sor.trim();",
                "\t\tif (aktSor.length > 0) this.#sorok.push(new MyClass(aktSor));",
                "\t});"]
    },



    // Place your jedlik-frontend-starter workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascripttypescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
}
